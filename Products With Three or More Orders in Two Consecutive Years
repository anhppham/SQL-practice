Write an SQL query to report the IDs of all the products that were ordered three or more times in two consecutive years.

Return the result table in any order.

The query result format is shown in the following example.

 

Example 1:

Input: 
Orders table:
+----------+------------+----------+---------------+
| order_id | product_id | quantity | purchase_date |
+----------+------------+----------+---------------+
| 1        | 1          | 7        | 2020-03-16    |
| 2        | 1          | 4        | 2020-12-02    |
| 3        | 1          | 7        | 2020-05-10    |
| 4        | 1          | 6        | 2021-12-23    |
| 5        | 1          | 5        | 2021-05-21    |
| 6        | 1          | 6        | 2021-10-11    |
| 7        | 2          | 6        | 2022-10-11    |
+----------+------------+----------+---------------+
Output: 
+------------+
| product_id |
+------------+
| 1          |
+------------+
Explanation: 
Product 1 was ordered in 2020 three times and in 2021 three times. Since it was ordered three times in two consecutive years, we include it in the answer.
Product 2 was ordered one time in 2022. We do not include it in the answer.

with cte as(
    select product_id, date_format(purchase_date, "%Y") purchase_year
from orders
group by product_id, purchase_year
having count(*) >= 3
), cte2 as(
    select *, lag(purchase_year,1) over(partition by product_id order by purchase_year) previous_year
from cte
)
select distinct product_id
from (select product_id,(
    case
    when (purchase_year-previous_year) = 1 then 'yes'
    else 'no' end
)selection
from cte2)t
where selection = 'yes'
