
Write an SQL query to report the statistics of the league. The statistics should be built using the played matches where the winning team gets three points and the losing team gets no points. If a match ends with a draw, both teams get one point.

Each row of the result table should contain:

team_name - The name of the team in the Teams table.
matches_played - The number of matches played as either a home or away team.
points - The total points the team has so far.
goal_for - The total number of goals scored by the team across all matches.
goal_against - The total number of goals scored by opponent teams against this team across all matches.
goal_diff - The result of goal_for - goal_against.
Return the result table ordered by points in descending order. If two or more teams have the same points, order them by goal_diff in descending order. If there is still a tie, order them by team_name in lexicographical order.

The query result format is in the following example.

 

Example 1:

Input: 
Teams table:
+---------+-----------+
| team_id | team_name |
+---------+-----------+
| 1       | Ajax      |
| 4       | Dortmund  |
| 6       | Arsenal   |
+---------+-----------+
Matches table:
+--------------+--------------+-----------------+-----------------+
| home_team_id | away_team_id | home_team_goals | away_team_goals |
+--------------+--------------+-----------------+-----------------+
| 1            | 4            | 0               | 1               |
| 1            | 6            | 3               | 3               |
| 4            | 1            | 5               | 2               |
| 6            | 1            | 0               | 0               |
+--------------+--------------+-----------------+-----------------+
Output: 
+-----------+----------------+--------+----------+--------------+-----------+
| team_name | matches_played | points | goal_for | goal_against | goal_diff |
+-----------+----------------+--------+----------+--------------+-----------+
| Dortmund  | 2              | 6      | 6        | 2            | 4         |
| Arsenal   | 2              | 2      | 3        | 3            | 0         |
| Ajax      | 4              | 2      | 5        | 9            | -4        |
+-----------+----------------+--------+----------+--------------+-----------+
Explanation: 
Ajax (team_id=1) played 4 matches: 2 losses and 2 draws. Total points = 0 + 0 + 1 + 1 = 2.
Dortmund (team_id=4) played 2 matches: 2 wins. Total points = 3 + 3 = 6.
Arsenal (team_id=6) played 2 matches: 2 draws. Total points = 1 + 1 = 2.
Dortmund is the first team in the table. Ajax and Arsenal have the same points, but since Arsenal has a higher goal_diff than Ajax, Arsenal comes before Ajax in the table.

select *,(
    case
    when home_team_goals > away_team_goals then home_team_id
    when home_team_goals < away_team_goals then away_team_id
    else null end
)winning_team
from matches

| home_team_id | away_team_id | home_team_goals | away_team_goals | winning_team |
| ------------ | ------------ | --------------- | --------------- | ------------ |
| 1            | 4            | 0               | 1               | 4            |
| 1            | 6            | 3               | 3               |              |
| 4            | 1            | 5               | 2               | 4            |
| 6            | 1            | 0               | 0               |              |

select home_team_id
from cte
where winning_team is null
union all
select away_team_id
from cte
where winning_team is null

| home_team_id |
| ------------ |
| 1            |
| 6            |
| 6            |
| 1            |



| winning_team | points |
| ------------ | ------ |
| 4            | 3      |
| 4            | 3      |
| 1            | 1      |
| 6            | 1      |
| 6            | 1      |
| 1            | 1      |

select winning_team,sum(
    case
    when home_team_goals > away_team_goals then home_team_goals
    when home_team_goals < away_team_goals then away_team_goals
    else null end
)goal_for, sum(
    case
    when home_team_goals > away_team_goals then away_team_goals
    when home_team_goals < away_team_goals then home_team_goals
    else null end
)goal_against
from cte
where winning_team is not null
group by winning_team
| home_team_id | away_team_id | home_team_goals | away_team_goals | goal_for | goal_against |
| ------------ | ------------ | --------------- | --------------- | -------- | ------------ |
| 1            | 4            | 0               | 1               | 1        | 0            |
| 1            | 6            | 3               | 3               |          |              |
| 4            | 1            | 5               | 2               | 5        | 2            |
| 6            | 1            | 0               | 0               |          |              |

| winning_team | goal_for | goal_against |
| ------------ | -------- | ------------ |
| 4            | 6        | 2            |

select home_team_id team_id, count(*) matches_played, sum(home_team_goals) team_goals
from (
    select home_team_id, home_team_goals
from matches
union all 
select away_team_id, away_team_goals
from matches
)t
group by home_team_id

| team_id | matches_played | team_goals |
| ------- | -------------- | ---------- |
| 1       | 4              | 5          |
| 4       | 2              | 6          |
| 6       | 2              | 3          |

select home_team_id team_id, sum(home_team_goals) goal_against
from(select m1.home_team_id, m1.home_team_goals
from matches m1 left join matches m2 on m1.home_team_id = m2.away_team_id
union all
select m2.home_team_id, m2.home_team_goals
from matches m1 left join matches m2 on m1.home_team_id = m2.away_team_id)t
group by team_id

| home_team_id | away_team_id | home_team_goals | away_team_goals | home_team_id | away_team_id | home_team_goals | away_team_goals |
| ------------ | ------------ | --------------- | --------------- | ------------ | ------------ | --------------- | --------------- |
| 1            | 4            | 0               | 1               | 6            | 1            | 0               | 0               |
| 1            | 4            | 0               | 1               | 4            | 1            | 5               | 2               |
| 1            | 6            | 3               | 3               | 6            | 1            | 0               | 0               |
| 1            | 6            | 3               | 3               | 4            | 1            | 5               | 2               |
| 4            | 1            | 5               | 2               | 1            | 4            | 0               | 1               |
| 6            | 1            | 0               | 0               | 1            | 6            | 3               | 3               |


select distinct m1.home_team_id, m1.away_team_id, m1.home_team_goals, m1.away_team_goals
from matches m1 left join matches m2 on m1.home_team_id = m2.away_team_id
union all
select distinct m2.home_team_id, m2.away_team_id, m2.home_team_goals, m2.away_team_goals
from matches m1 left join matches m2 on m1.home_team_id = m2.away_team_id

| home_team_id | away_team_id | home_team_goals | away_team_goals |
| ------------ | ------------ | --------------- | --------------- |
| 1            | 4            | 0               | 1               |
| 1            | 6            | 3               | 3               |
| 4            | 1            | 5               | 2               |
| 6            | 1            | 0               | 0               |
| 6            | 1            | 0               | 0               |
| 4            | 1            | 5               | 2               |
| 1            | 4            | 0               | 1               |
| 1            | 6            | 3               | 3               |
