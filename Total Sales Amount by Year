Input: 
Product table:
+------------+--------------+
| product_id | product_name |
+------------+--------------+
| 1          | LC Phone     |
| 2          | LC T-Shirt   |
| 3          | LC Keychain  |
+------------+--------------+
Sales table:
+------------+--------------+-------------+---------------------+
| product_id | period_start | period_end  | average_daily_sales |
+------------+--------------+-------------+---------------------+
| 1          | 2019-01-25   | 2019-02-28  | 100                 |
| 2          | 2018-12-01   | 2020-01-01  | 10                  |
| 3          | 2019-12-01   | 2020-01-31  | 1                   |
+------------+--------------+-------------+---------------------+
Output: 
+------------+--------------+-------------+--------------+
| product_id | product_name | report_year | total_amount |
+------------+--------------+-------------+--------------+
| 1          | LC Phone     |    2019     | 3500         |
| 2          | LC T-Shirt   |    2018     | 310          |
| 2          | LC T-Shirt   |    2019     | 3650         |
| 2          | LC T-Shirt   |    2020     | 10           |
| 3          | LC Keychain  |    2019     | 31           |
| 3          | LC Keychain  |    2020     | 31           |
+------------+--------------+-------------+--------------+



| product_id | period_start | start_year | end_year | period_end | average_daily_sales |
| ---------- | ------------ | ---------- | -------- | ---------- | ------------------- |
| 1          | 2019-01-25   | 2019       | 2019     | 2019-02-28 | 100                 |
| 2          | 2018-12-01   | 2018       | 2020     | 2020-01-01 | 10                  |
| 3          | 2019-12-01   | 2019       | 2020     | 2020-01-31 | 1                   |


with recursive cte2 as(
    select 2015 time_gap
    union all
    select time_gap+1 from cte2 where time_gap<=2030
), cte as(
    select product_id,period_start, year(period_start) start_year, year(period_end) end_year, period_end,average_daily_sales
from sales
), time_date as(
    select *
from cte2 left join cte on end_year>=time_gap and start_year<=time_gap
where product_id is not Null
order by product_id
)

| time_gap | product_id | period_start | start_year | end_year | period_end | average_daily_sales |
| -------- | ---------- | ------------ | ---------- | -------- | ---------- | ------------------- |
| 2019     | 1          | 2019-01-25   | 2019       | 2019     | 2019-02-28 | 100                 |
| 2018     | 2          | 2018-12-01   | 2018       | 2020     | 2020-01-01 | 10                  |
| 2019     | 2          | 2018-12-01   | 2018       | 2020     | 2020-01-01 | 10                  |
| 2020     | 2          | 2018-12-01   | 2018       | 2020     | 2020-01-01 | 10                  |
| 2019     | 3          | 2019-12-01   | 2019       | 2020     | 2020-01-31 | 1                   |
| 2020     | 3          | 2019-12-01   | 2019       | 2020     | 2020-01-31 | 1                   |


with recursive cte2 as(
    select 2015 time_gap
    union all
    select time_gap+1 from cte2 where time_gap<=2030
), cte as(
    select product_id,period_start, year(period_start) start_year, year(period_end) end_year, period_end,average_daily_sales
from sales
), time_date as(
    select *
from cte2 left join cte on end_year>=time_gap and start_year<=time_gap
where product_id is not Null
order by product_id
)
select product_id,time_gap report_year, average_daily_sales, (
    case
    when (time_gap = start_year) and (time_gap = end_year) then datediff(period_end,period_start)+1
    when (time_gap = start_year) and (time_gap != end_year) then CONCAT(time_gap,'-12-31')
    when (time_gap != start_year) and (time_gap = end_year) then CONCAT(time_gap,'-12-31')
    else 365 end
)new_date, period_start,period_end
from time_date

| product_id | report_year | average_daily_sales | new_date   | period_start | period_end |
| ---------- | ----------- | ------------------- | ---------- | ------------ | ---------- |
| 1          | 2019        | 100                 | 35         | 2019-01-25   | 2019-02-28 |
| 2          | 2018        | 10                  | 2018-12-31 | 2018-12-01   | 2020-01-01 |
| 2          | 2019        | 10                  | 365        | 2018-12-01   | 2020-01-01 |
| 2          | 2020        | 10                  | 2020-12-31 | 2018-12-01   | 2020-01-01 |
| 3          | 2019        | 1                   | 2019-12-31 | 2019-12-01   | 2020-01-31 |
| 3          | 2020        | 1                   | 2020-12-31 | 2019-12-01   | 2020-01-31 |


with recursive cte2 as(
    select 2015 time_gap
    union all
    select time_gap+1 from cte2 where time_gap<=2030
), cte as(
    select product_id,period_start, year(period_start) start_year, year(period_end) end_year, period_end,average_daily_sales
from sales
), time_date as(
    select *
from cte2 left join cte on end_year>=time_gap and start_year<=time_gap
where product_id is not Null
order by product_id
), final_time as(
    select *, (
    case
    when (time_gap = start_year) and (time_gap = end_year) then datediff(period_end,period_start)+1
    when (time_gap = start_year) and (time_gap != end_year) then CONCAT(time_gap,'-12-31')
    when (time_gap != start_year) and (time_gap = end_year) then CONCAT(time_gap-1,'-12-31')
    else 365 end
)new_date
from time_date
)
select product_id, time_gap report_year, average_daily_sales,(
    case
    when (time_gap = start_year) and (time_gap != end_year) then datediff(new_date,period_start)+1
    when (time_gap != start_year) and (time_gap = end_year) then datediff(period_end,new_date)
    else new_date end
)production
from final_time

| product_id | report_year | average_daily_sales | production |
| ---------- | ----------- | ------------------- | ---------- |
| 1          | 2019        | 100                 | 35         |
| 2          | 2018        | 10                  | 31         |
| 2          | 2019        | 10                  | 365        |
| 2          | 2020        | 10                  | 1          |
| 3          | 2019        | 1                   | 31         |
| 3          | 2020        | 1                   | 31         |


with recursive cte2 as(
    select 2015 time_gap
    union all
    select time_gap+1 from cte2 where time_gap<=2030
), cte as(
    select product_id,period_start, year(period_start) start_year, year(period_end) end_year, period_end,average_daily_sales
from sales
), time_date as(
    select *
from cte2 left join cte on end_year>=time_gap and start_year<=time_gap
where product_id is not Null
order by product_id
), final_time as(
    select *, (
    case
    when (time_gap = start_year) and (time_gap = end_year) then datediff(period_end,period_start)+1
    when (time_gap = start_year) and (time_gap != end_year) then CONCAT(time_gap,'-12-31')
    when (time_gap != start_year) and (time_gap = end_year) then CONCAT(time_gap-1,'-12-31')
    else 365 end
)new_date
from time_date
), final_table as(
    select product_id, time_gap report_year, average_daily_sales,(
    case
    when (time_gap = start_year) and (time_gap != end_year) then datediff(new_date,period_start)+1
    when (time_gap != start_year) and (time_gap = end_year) then datediff(period_end,new_date)
    else new_date end
)production
from final_time
)
select f.product_id, product_name, report_year, (average_daily_sales*production) total_amount
from final_table f left join product p on f.product_id = p.product_id
order by f.product_id

