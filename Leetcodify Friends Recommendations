Write an SQL query to recommend friends to Leetcodify users. We recommend user x to user y if:

Users x and y are not friends, and
Users x and y listened to the same three or more different songs on the same day.
Note that friend recommendations are unidirectional, meaning if user x and user y should be recommended to each other, the result table should have both user x recommended to user y and user y recommended to user x. Also, note that the result table should not contain duplicates (i.e., user y should not be recommended to user x multiple times.).

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Listens table:
+---------+---------+------------+
| user_id | song_id | day        |
+---------+---------+------------+
| 1       | 10      | 2021-03-15 |
| 1       | 11      | 2021-03-15 |
| 1       | 12      | 2021-03-15 |
| 2       | 10      | 2021-03-15 |
| 2       | 11      | 2021-03-15 |
| 2       | 12      | 2021-03-15 |
| 3       | 10      | 2021-03-15 |
| 3       | 11      | 2021-03-15 |
| 3       | 12      | 2021-03-15 |
| 4       | 10      | 2021-03-15 |
| 4       | 11      | 2021-03-15 |
| 4       | 13      | 2021-03-15 |
| 5       | 10      | 2021-03-16 |
| 5       | 11      | 2021-03-16 |
| 5       | 12      | 2021-03-16 |
+---------+---------+------------+
Friendship table:
+----------+----------+
| user1_id | user2_id |
+----------+----------+
| 1        | 2        |
+----------+----------+
Output: 
+---------+----------------+
| user_id | recommended_id |
+---------+----------------+
| 1       | 3              |
| 2       | 3              |
| 3       | 1              |
| 3       | 2              |
+---------+----------------+
Explanation: 
Users 1 and 2 listened to songs 10, 11, and 12 on the same day, but they are already friends.
Users 1 and 3 listened to songs 10, 11, and 12 on the same day. Since they are not friends, we recommend them to each other.
Users 1 and 4 did not listen to the same three songs.
Users 1 and 5 listened to songs 10, 11, and 12, but on different days.

Similarly, we can see that users 2 and 3 listened to songs 10, 11, and 12 on the same day and are not friends, so we recommend them to each other.

with cte as(
    select user1_id, user2_id
    from friendship
    union all
    select user2_id,user1_id
    from friendship
)
select *
from listens l1, listens l2
where l1.user_id != l2.user_id and l1.day = l2.day

| user_id | song_id | day        | user_id | song_id | day        |
| ------- | ------- | ---------- | ------- | ------- | ---------- |
| 4       | 13      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 1       | 11      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 1       | 12      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 2       | 11      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 2       | 12      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 3       | 11      | 2021-03-15 |
| 4       | 13      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 4       | 11      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 4       | 10      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 3       | 12      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 4       | 10      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 4       | 11      | 2021-03-15 |
| 3       | 12      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 3       | 11      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 2       | 12      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 2       | 11      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 1       | 12      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 1       | 11      | 2021-03-15 | 4       | 13      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 4       | 13      | 2021-03-15 |

with cte as(
    select user1_id, user2_id
    from friendship
    union all
    select user2_id,user1_id
    from friendship
)
select *
from listens l1, listens l2
where l1.user_id != l2.user_id and l1.day = l2.day and l1.song_id = l2.song_id
group by l1.user_id,l2.user_id
having count(l1.user_id) >= 3

| user_id | song_id | day        | user_id | song_id | day        |
| ------- | ------- | ---------- | ------- | ------- | ---------- |
| 3       | 10      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 1       | 10      | 2021-03-15 |
| 3       | 10      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 2       | 10      | 2021-03-15 |
| 2       | 10      | 2021-03-15 | 3       | 10      | 2021-03-15 |
| 1       | 10      | 2021-03-15 | 3       | 10      | 2021-03-15 |


#solution
with cte as(
    select user1_id, user2_id
    from friendship
    union all
    select user2_id,user1_id
    from friendship
), cte2 as (
    select distinct l1.user_id user_id, l2.user_id recommended_id
from listens l1, listens l2
where l1.user_id != l2.user_id and l1.day = l2.day and l1.song_id = l2.song_id
group by l1.user_id, l2.user_id, l1.day
having count(distinct l1.song_id) >= 3
)
select distinct user_id,recommended_id
from cte2
where (user_id,recommended_id) not in (select * from cte)
