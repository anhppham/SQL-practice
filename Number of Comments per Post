
Write an SQL query to find the number of comments per post. The result table should contain post_id and its corresponding number_of_comments.

The Submissions table may contain duplicate comments. You should count the number of unique comments per post.

The Submissions table may contain duplicate posts. You should treat them as one post.

The result table should be ordered by post_id in ascending order.

The query result format is in the following example.

 

Example 1:

Input: 
Submissions table:
+---------+------------+
| sub_id  | parent_id  |
+---------+------------+
| 1       | Null       |
| 2       | Null       |
| 1       | Null       |
| 12      | Null       |
| 3       | 1          |
| 5       | 2          |
| 3       | 1          |
| 4       | 1          |
| 9       | 1          |
| 10      | 2          |
| 6       | 7          |
+---------+------------+
Output: 
+---------+--------------------+
| post_id | number_of_comments |
+---------+--------------------+
| 1       | 3                  |
| 2       | 2                  |
| 12      | 0                  |
+---------+--------------------+
Explanation: 
The post with id 1 has three comments in the table with id 3, 4, and 9. The comment with id 3 is repeated in the table, we counted it only once.
The post with id 2 has two comments in the table with id 5 and 10.
The post with id 12 has no comments in the table.
The comment with id 6 is a comment on a deleted post with id 7 so we ignored it.

select distinct sub_id
from submissions
where parent_id is null

| sub_id |
| ------ |
| 1      |
| 2      |
| 12     |

select parent_id post_id, count(distinct sub_id) number_of_comments
from submissions
where parent_id is not null
group by parent_id

| post_id | number_of_comments |
| ------- | ------------------ |
| 1       | 3                  |
| 2       | 2                  |
| 7       | 1                  |

with cte as (
    select parent_id post_id, count(distinct sub_id) number_of_comments
from submissions
where parent_id is not null
group by parent_id
), cte2 as(
    select distinct sub_id post_id
from submissions
where parent_id is null
)
select c1.post_id, ifnull(number_of_comments,0) number_of_comments
from cte2 c1 left join cte c2 using(post_id)
order by post_id asc
