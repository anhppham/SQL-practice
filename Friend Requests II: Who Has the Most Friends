
Write an SQL query to find the people who have the most friends and the most friends number.

The test cases are generated so that only one person has the most friends.

The query result format is in the following example.

 

Example 1:

Input: 
RequestAccepted table:
+--------------+-------------+-------------+
| requester_id | accepter_id | accept_date |
+--------------+-------------+-------------+
| 1            | 2           | 2016/06/03  |
| 1            | 3           | 2016/06/08  |
| 2            | 3           | 2016/06/08  |
| 3            | 4           | 2016/06/09  |
+--------------+-------------+-------------+
Output: 
+----+-----+
| id | num |
+----+-----+
| 3  | 3   |
+----+-----+
Explanation: 
The person with id 3 is a friend of people 1, 2, and 4, so he has three friends in total, which is the most number than any others.

| requester_id | accepter_id | accept_date | requester_id | accepter_id | accept_date |
| ------------ | ----------- | ----------- | ------------ | ----------- | ----------- |
| 1            | 2           | 2016-06-03  | 2            | 3           | 2016-06-08  |
| 2            | 3           | 2016-06-08  | 3            | 4           | 2016-06-09  |
| 1            | 3           | 2016-06-08  | 3            | 4           | 2016-06-09  |

UNION ALL
| requester_id |
| ------------ |
| 1            |
| 1            |
| 2            |
| 3            |
| 2            |
| 3            |
| 3            |
| 4            |

with cte as(
    select requester_id id, count(*) num 
from (select requester_id
from RequestAccepted 
union all
select accepter_id
from RequestAccepted)t
group by id
)
select *
from cte
where num in (select max(num) from cte)
order by num desc
limit 1
