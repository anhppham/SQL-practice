

The cumulative salary summary for an employee can be calculated as follows:

For each month that the employee worked, sum up the salaries in that month and the previous two months. This is their 3-month sum for that month. If an employee did not work for the company in previous months, their effective salary for those months is 0.
Do not include the 3-month sum for the most recent month that the employee worked for in the summary.
Do not include the 3-month sum for any month the employee did not work.
Return the result table ordered by id in ascending order. In case of a tie, order it by month in descending order.

The query result format is in the following example.

 

Example 1:

Input: 
Employee table:
+----+-------+--------+
| id | month | salary |
+----+-------+--------+
| 1  | 1     | 20     |
| 2  | 1     | 20     |
| 1  | 2     | 30     |
| 2  | 2     | 30     |
| 3  | 2     | 40     |
| 1  | 3     | 40     |
| 3  | 3     | 60     |
| 1  | 4     | 60     |
| 3  | 4     | 70     |
| 1  | 7     | 90     |
| 1  | 8     | 90     |
+----+-------+--------+
Output: 
+----+-------+--------+
| id | month | Salary |
+----+-------+--------+
| 1  | 7     | 90     |
| 1  | 4     | 130    |
| 1  | 3     | 90     |
| 1  | 2     | 50     |
| 1  | 1     | 20     |
| 2  | 1     | 20     |
| 3  | 3     | 100    |
| 3  | 2     | 40     |
+----+-------+--------+
Explanation: 
Employee '1' has five salary records excluding their most recent month '8':
- 90 for month '7'.
- 60 for month '4'.
- 40 for month '3'.
- 30 for month '2'.
- 20 for month '1'.
So the cumulative salary summary for this employee is:
+----+-------+--------+
| id | month | salary |
+----+-------+--------+
| 1  | 7     | 90     |  (90 + 0 + 0)
| 1  | 4     | 130    |  (60 + 40 + 30)
| 1  | 3     | 90     |  (40 + 30 + 20)
| 1  | 2     | 50     |  (30 + 20 + 0)
| 1  | 1     | 20     |  (20 + 0 + 0)
+----+-------+--------+
Note that the 3-month sum for month '7' is 90 because they did not work during month '6' or month '5'.

Employee '2' only has one salary record (month '1') excluding their most recent month '2'.
+----+-------+--------+
| id | month | salary |
+----+-------+--------+
| 2  | 1     | 20     |  (20 + 0 + 0)
+----+-------+--------+

Employee '3' has two salary records excluding their most recent month '4':
- 60 for month '3'.
- 40 for month '2'.
So the cumulative salary summary for this employee is:
+----+-------+--------+
| id | month | salary |
+----+-------+--------+
| 3  | 3     | 100    |  (60 + 40 + 0)
| 3  | 2     | 40     |  (40 + 0 + 0)
+----+-------+--------+

select *, row_number() over (partition by id
order by month) consequetive_month
from employee

| id | month | salary | consequetive_month |
| -- | ----- | ------ | ------------------ |
| 1  | 1     | 20     | 1                  |
| 1  | 2     | 30     | 2                  |
| 1  | 3     | 40     | 3                  |
| 1  | 4     | 60     | 4                  |
| 1  | 7     | 90     | 5                  |
| 1  | 8     | 90     | 6                  |
| 2  | 1     | 20     | 1                  |
| 2  | 2     | 30     | 2                  |
| 3  | 2     | 40     | 1                  |
| 3  | 3     | 60     | 2                  |
| 3  | 4     | 70     | 3                  |

| id | month | salary | the_month |
| -- | ----- | ------ | --------- |
| 1  | 1     | 20     | 0         |
| 1  | 2     | 30     | 0         |
| 1  | 3     | 40     | 0         |
| 1  | 4     | 60     | 0         |
| 1  | 7     | 90     | 2         |
| 1  | 8     | 90     | 2         |
| 2  | 1     | 20     | 0         |
| 2  | 2     | 30     | 0         |
| 3  | 2     | 40     | 1         |
| 3  | 3     | 60     | 1         |
| 3  | 4     | 70     | 1         |
select *, ifnull(lag(salary,1) over (partition by id
order by month),0) pre_month, ifnull(lag(salary,2) over (partition by id
order by month),0) pre2_month
from employee

select id, month, (
    case 
    when (month - consequetive_month) = 0 then 0
    else (month - consequetive_month) end
) the_month
from (select *, row_number() over (partition by id
order by month) consequetive_month
from employee)t

| id | month | salary | pre_month | pre2_month |
| -- | ----- | ------ | --------- | ---------- |
| 1  | 1     | 20     | 0         | 0          |
| 1  | 2     | 30     | 20        | 0          |
| 1  | 3     | 40     | 30        | 20         |
| 1  | 4     | 60     | 40        | 30         |
| 1  | 7     | 90     | 60        | 40         |
| 1  | 8     | 90     | 90        | 60         |
| 2  | 1     | 20     | 0         | 0          |
| 2  | 2     | 30     | 20        | 0          |
| 3  | 2     | 40     | 0         | 0          |
| 3  | 3     | 60     | 40        | 0          |
| 3  | 4     | 70     | 60        | 40         |


with RECURSIVE month_time as (
    select 1 month
    union
    select month+1 month
    from month_time 
    where month <12
)
select *
from employee e right join month_time m using(month)
order by id, month

| month | id   | salary |
| ----- | ---- | ------ |
| 5     | null | null   |
| 6     | null | null   |
| 9     | null | null   |
| 10    | null | null   |
| 11    | null | null   |
| 12    | null | null   |
| 1     | 1    | 20     |
| 2     | 1    | 30     |
| 3     | 1    | 40     |
| 4     | 1    | 60     |
| 7     | 1    | 90     |
| 8     | 1    | 90     |
| 1     | 2    | 20     |
| 2     | 2    | 30     |
| 2     | 3    | 40     |
| 3     | 3    | 60     |
| 4     | 3    | 70     |


with cte as (
    select id, month, consequetive_month, (
    case 
    when (month - consequetive_month) = 0 then 0
    else (month - consequetive_month) end
) the_month
from (select *, row_number() over (partition by id
order by month) consequetive_month
from employee)t
), cte2 as (
    select *, ifnull(lag(salary,1) over (partition by id
order by month),0) pre_month, ifnull(lag(salary,2) over (partition by id
order by month),0) pre2_month
from employee
)
select c1.id, c1.month, consequetive_month, salary, pre_month,pre2_month,the_month
from cte c1 join cte2 c2 on c1.id = c2.id and c1.month = c2.month

| id | month | consequetive_month | salary | pre_month | pre2_month | the_month |
| -- | ----- | ------------------ | ------ | --------- | ---------- | --------- |
| 1  | 1     | 1                  | 20     | 0         | 0          | 0         |
| 1  | 2     | 2                  | 30     | 20        | 0          | 0         |
| 1  | 3     | 3                  | 40     | 30        | 20         | 0         |
| 1  | 4     | 4                  | 60     | 40        | 30         | 0         |
| 1  | 7     | 5                  | 90     | 60        | 40         | 2         |
| 1  | 8     | 6                  | 90     | 90        | 60         | 2         |
| 2  | 1     | 1                  | 20     | 0         | 0          | 0         |
| 2  | 2     | 2                  | 30     | 20        | 0          | 0         |
| 3  | 2     | 1                  | 40     | 0         | 0          | 1         |
| 3  | 3     | 2                  | 60     | 40        | 0          | 1         |
| 3  | 4     | 3                  | 70     | 60        | 40         | 1         |

select *, ifnull(lag(month,1) over (partition by id
order by month),0) pre_month_date, ifnull(lag(month,2) over (partition by id
order by month),0) pre2_month_date
from employee

| id | month | salary | pre_month_date | pre2_month_date |
| -- | ----- | ------ | -------------- | --------------- |
| 1  | 1     | 20     | 0              | 0               |
| 1  | 2     | 30     | 1              | 0               |
| 1  | 3     | 40     | 2              | 1               |
| 1  | 4     | 60     | 3              | 2               |
| 1  | 7     | 90     | 4              | 3               |
| 1  | 8     | 90     | 7              | 4               |
| 2  | 1     | 20     | 0              | 0               |
| 2  | 2     | 30     | 1              | 0               |
| 3  | 2     | 40     | 0              | 0               |
| 3  | 3     | 60     | 2              | 0               |
| 3  | 4     | 70     | 3              | 2               |

with cte2 as (
    select *, ifnull(lag(salary,1) over (partition by id
order by month),0) pre_month, ifnull(lag(salary,2) over (partition by id
order by month),0) pre2_month
from employee)
select *#, (
    #case 
    #when (month - pre_month_date)
#)
from (select *, ifnull(lag(month,1) over (partition by id
order by month),0) pre_month_date, ifnull(lag(month,2) over (partition by id
order by month),0) pre2_month_date
from employee) c1 join cte2 c2 on c1.id = c2.id and c1.month = c2.month

| id | month | salary | pre_month_date | pre2_month_date | id | month | salary | pre_month | pre2_month |
| -- | ----- | ------ | -------------- | --------------- | -- | ----- | ------ | --------- | ---------- |
| 1  | 1     | 20     | 0              | 0               | 1  | 1     | 20     | 0         | 0          |
| 1  | 2     | 30     | 1              | 0               | 1  | 2     | 30     | 20        | 0          |
| 1  | 3     | 40     | 2              | 1               | 1  | 3     | 40     | 30        | 20         |
| 1  | 4     | 60     | 3              | 2               | 1  | 4     | 60     | 40        | 30         |
| 1  | 7     | 90     | 4              | 3               | 1  | 7     | 90     | 60        | 40         |
| 1  | 8     | 90     | 7              | 4               | 1  | 8     | 90     | 90        | 60         |
| 2  | 1     | 20     | 0              | 0               | 2  | 1     | 20     | 0         | 0          |
| 2  | 2     | 30     | 1              | 0               | 2  | 2     | 30     | 20        | 0          |
| 3  | 2     | 40     | 0              | 0               | 3  | 2     | 40     | 0         | 0          |
| 3  | 3     | 60     | 2              | 0               | 3  | 3     | 60     | 40        | 0          |
| 3  | 4     | 70     | 3              | 2               | 3  | 4     | 70     | 60        | 40         |




| id | month | salary | pre_month_date | pre2_month_date | id | month | salary | pre_month | pre2_month | actual_pre_month | actual_pre2_month |
| -- | ----- | ------ | -------------- | --------------- | -- | ----- | ------ | --------- | ---------- | ---------------- | ----------------- |
| 1  | 1     | 20     | 0              | 0               | 1  | 1     | 20     | 0         | 0          | 0                | 0                 |
| 1  | 2     | 30     | 1              | 0               | 1  | 2     | 30     | 20        | 0          | 20               | 20                |
| 1  | 3     | 40     | 2              | 1               | 1  | 3     | 40     | 30        | 20         | 30               | 30                |
| 1  | 4     | 60     | 3              | 2               | 1  | 4     | 60     | 40        | 30         | 40               | 40                |
| 1  | 7     | 90     | 4              | 3               | 1  | 7     | 90     | 60        | 40         | 0                | 0                 |
| 1  | 8     | 90     | 7              | 4               | 1  | 8     | 90     | 90        | 60         | 90               | 0                 |
| 2  | 1     | 20     | 0              | 0               | 2  | 1     | 20     | 0         | 0          | 0                | 0                 |
| 2  | 2     | 30     | 1              | 0               | 2  | 2     | 30     | 20        | 0          | 20               | 20                |
| 3  | 2     | 40     | 0              | 0               | 3  | 2     | 40     | 0         | 0          | 0                | 0                 |
| 3  | 3     | 60     | 2              | 0               | 3  | 3     | 60     | 40        | 0          | 40               | 0                 |
| 3  | 4     | 70     | 3              | 2               | 3  | 4     | 70     | 60        | 40         | 60               | 60                |

with cte2 as (
    select *, ifnull(lag(salary,1) over (partition by id
order by month),0) pre_month, ifnull(lag(salary,2) over (partition by id
order by month),0) pre2_month
from employee)
select c1.id, c1.month, c1.salary, (
    case 
    when (c1.month - pre_month_date) = 1 then pre_month
    else  0 end
) actual_pre_month,
(
    case 
    when (c1.month - pre2_month_date) = 2 then pre_month
    else 0 end
) actual_pre2_month
from (select *, ifnull(lag(month,1) over (partition by id
order by month),0) pre_month_date, ifnull(lag(month,2) over (partition by id
order by month),0) pre2_month_date
from employee) c1 join cte2 c2 on c1.id = c2.id and c1.month = c2.month

| id | month | salary | actual_pre_month | actual_pre2_month |
| -- | ----- | ------ | ---------------- | ----------------- |
| 1  | 1     | 20     | 0                | 0                 |
| 1  | 2     | 30     | 20               | 20                |
| 1  | 3     | 40     | 30               | 30                |
| 1  | 4     | 60     | 40               | 40                |
| 1  | 7     | 90     | 0                | 0                 |
| 1  | 8     | 90     | 90               | 0                 |
| 2  | 1     | 20     | 0                | 0                 |
| 2  | 2     | 30     | 20               | 20                |
| 3  | 2     | 40     | 0                | 0                 |
| 3  | 3     | 60     | 40               | 0                 |
| 3  | 4     | 70     | 60               | 60                |



#solution
with cte2 as (
    select *, ifnull(lag(salary,1) over (partition by id
order by month),0) pre_month, ifnull(lag(salary,2) over (partition by id
order by month),0) pre2_month
from employee),
cte3 as (
    select c1.id, c1.month, c1.salary, (
    case 
    when pre_month_date!= 0 and (c1.month - pre_month_date) = 1 then pre_month
    else  0 end
) actual_pre_month,
(
    case 
    when pre2_month_date!= 0 and (c1.month - pre2_month_date) = 2 then pre2_month
    else 0 end
) actual_pre2_month
from (select *, ifnull(lag(month,1) over (partition by id
order by month),0) pre_month_date, ifnull(lag(month,2) over (partition by id
order by month),0) pre2_month_date
from employee) c1 join cte2 c2 on c1.id = c2.id and c1.month = c2.month
)
select id, month, (salary+actual_pre_month+actual_pre2_month) Salary
from cte3
where (id,month) not in (select id, max(month) 
from cte3 
group by id)
order by id, month desc

| id | month | salary | actual_pre_month | actual_pre2_month |
| -- | ----- | ------ | ---------------- | ----------------- |
| 1  | 1     | 20     | 0                | 0                 |
| 1  | 2     | 30     | 20               | 0                 |
| 1  | 3     | 40     | 30               | 1                 |
| 1  | 4     | 60     | 40               | 2                 |
| 1  | 7     | 90     | 0                | 0                 |
| 1  | 8     | 90     | 90               | 0                 |
| 2  | 1     | 20     | 0                | 0                 |
| 2  | 2     | 30     | 20               | 0                 |
| 3  | 2     | 40     | 0                | 0                 |
| 3  | 3     | 60     | 40               | 0                 |
| 3  | 4     | 70     | 60               | 2                 |

| id | max(month) |
| -- | ---------- |
| 1  | 8          |
| 2  | 2          |
| 3  | 4          |
