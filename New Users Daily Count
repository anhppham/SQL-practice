
Input: 
Traffic table:
+---------+----------+---------------+
| user_id | activity | activity_date |
+---------+----------+---------------+
| 1       | login    | 2019-05-01    |
| 1       | homepage | 2019-05-01    |
| 1       | logout   | 2019-05-01    |
| 2       | login    | 2019-06-21    |
| 2       | logout   | 2019-06-21    |
| 3       | login    | 2019-01-01    |
| 3       | jobs     | 2019-01-01    |
| 3       | logout   | 2019-01-01    |
| 4       | login    | 2019-06-21    |
| 4       | groups   | 2019-06-21    |
| 4       | logout   | 2019-06-21    |
| 5       | login    | 2019-03-01    |
| 5       | logout   | 2019-03-01    |
| 5       | login    | 2019-06-21    |
| 5       | logout   | 2019-06-21    |
+---------+----------+---------------+
Output: 
+------------+-------------+
| login_date | user_count  |
+------------+-------------+
| 2019-05-01 | 1           |
| 2019-06-21 | 2           |
+------------+-------------+
Explanation: 
Note that we only care about dates with non zero user count.
The user with id 5 first logged in on 2019-03-01 so he's not counted on 2019-06-21.

select *
from traffic
where activity = 'login' and datediff('2019-06-30',activity_date) <=90

select *, min(activity_date) first_login
from traffic
where activity = 'login'
group by user_id

| user_id | activity | activity_date | min(activity_date) |
| ------- | -------- | ------------- | ------------------ |
| 1       | login    | 2019-05-01    | 2019-05-01         |
| 2       | login    | 2019-06-21    | 2019-06-21         |
| 3       | login    | 2019-01-01    | 2019-01-01         |
| 4       | login    | 2019-06-21    | 2019-06-21         |
| 5       | login    | 2019-03-01    | 2019-03-01         |


#solution
with cte as(
    select *, min(activity_date) first_login
from traffic
where activity = 'login'
group by user_id
)
select first_login login_date, count(*) user_count
from (select user_id, activity, first_login
from cte
where datediff('2019-06-30',first_login) <=90)t
group by login_date
