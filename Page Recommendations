Input: 
Friendship table:
+----------+----------+
| user1_id | user2_id |
+----------+----------+
| 1        | 2        |
| 1        | 3        |
| 1        | 4        |
| 2        | 3        |
| 2        | 4        |
| 2        | 5        |
| 6        | 1        |
+----------+----------+
Likes table:
+---------+---------+
| user_id | page_id |
+---------+---------+
| 1       | 88      |
| 2       | 23      |
| 3       | 24      |
| 4       | 56      |
| 5       | 11      |
| 6       | 33      |
| 2       | 77      |
| 3       | 77      |
| 6       | 88      |
+---------+---------+

Output: 
+------------------+
| recommended_page |
+------------------+
| 23               |
| 24               |
| 56               |
| 33               |
| 77               |
+------------------+

select *
from likes l
left join Friendship f2 on (f2.user2_id = l.user_id)
where f2.user2_id in (select user2_id from Friendship where user1_id=1)
and page_id not in (select page_id from likes where user_id = 1)

| user_id | page_id | user1_id | user2_id |
| ------- | ------- | -------- | -------- |
| 2       | 23      | 1        | 2        |
| 3       | 24      | 2        | 3        |
| 3       | 24      | 1        | 3        |
| 4       | 56      | 2        | 4        |
| 4       | 56      | 1        | 4        |
| 2       | 77      | 1        | 2        |
| 3       | 77      | 2        | 3        |
| 3       | 77      | 1        | 3        |

#solution
with T as(
    select user2_id user from Friendship where user1_id = 1 
    union
    select user1_id user from Friendship where user2_id = 1
)
select Distinct page_id recommended_page
from likes, T
where user_id in (select user from T)
and page_id not in (select page_id from likes where user_id = 1)
