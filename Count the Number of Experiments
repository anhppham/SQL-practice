

Write an SQL query to report the number of experiments done on each of the three platforms for each of the three given experiments. Notice that all the pairs of (platform, experiment) should be included in the output including the pairs with zero experiments.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input:
Experiments table:
+---------------+----------+-----------------+
| experiment_id | platform | experiment_name |
+---------------+----------+-----------------+
| 4             | IOS      | Programming     |
| 13            | IOS      | Sports          |
| 14            | Android  | Reading         |
| 8             | Web      | Reading         |
| 12            | Web      | Reading         |
| 18            | Web      | Programming     |
+---------------+----------+-----------------+
Output: 
+----------+-----------------+-----------------+
| platform | experiment_name | num_experiments |
+----------+-----------------+-----------------+
| Android  | Reading         | 1               |
| Android  | Sports          | 0               |
| Android  | Programming     | 0               |
| IOS      | Reading         | 0               |
| IOS      | Sports          | 1               |
| IOS      | Programming     | 1               |
| Web      | Reading         | 2               |
| Web      | Sports          | 0               |
| Web      | Programming     | 1               |
+----------+-----------------+-----------------+
Explanation: 
On the platform "Android", we had only one "Reading" experiment.
On the platform "IOS", we had one "Sports" experiment and one "Programming" experiment.
On the platform "Web", we had two "Reading" experiments and one "Programming" experiment.


select *
from (select distinct platform from Experiments)t cross join (select distinct experiment_name from Experiments)m

| platform | experiment_name |
| -------- | --------------- |
| Web      | Programming     |
| Android  | Programming     |
| IOS      | Programming     |
| Web      | Sports          |
| Android  | Sports          |
| IOS      | Sports          |
| Web      | Reading         |
| Android  | Reading         |
| IOS      | Reading         |

select *, count(*) num_experiments
from experiments
group by platform, experiment_name

| experiment_id | platform | experiment_name | num_experiments |
| ------------- | -------- | --------------- | --------------- |
| 4             | IOS      | Programming     | 1               |
| 13            | IOS      | Sports          | 1               |
| 14            | Android  | Reading         | 1               |
| 8             | Web      | Reading         | 2               |
| 18            | Web      | Programming     | 1               |

with cte1 as(
    select 'Android' as platform
    union
    select 'IOS' as platform
    union
    select 'Web' as platform
), cte_1 as(
    select 'Reading' as experiment_name
    union
    select 'Sports' as experiment_name
    union
    select 'Programming' as experiment_name
), cte as(
    select *
    from cte1 cross join cte_1
),cte2 as (
    select *, count(*) num_experiments
from experiments
group by platform, experiment_name
)
select c1.platform, c1.experiment_name, ifnull(num_experiments,0) num_experiments
from cte c1 left join cte2 c2 on c1.platform = c2.platform and c1.experiment_name = c2.experiment_name
Console
