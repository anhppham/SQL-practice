Write an SQL query that reports for each user the product id on which the user spent the most money. In case the same user spent the most money on two or more products, report all of them.

Return the resulting table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Sales table:
+---------+------------+---------+----------+
| sale_id | product_id | user_id | quantity |
+---------+------------+---------+----------+
| 1       | 1          | 101     | 10       |
| 2       | 3          | 101     | 7        |
| 3       | 1          | 102     | 9        |
| 4       | 2          | 102     | 6        |
| 5       | 3          | 102     | 10       |
| 6       | 1          | 102     | 6        |
+---------+------------+---------+----------+
Product table:
+------------+-------+
| product_id | price |
+------------+-------+
| 1          | 10    |
| 2          | 25    |
| 3          | 15    |
+------------+-------+
Output: 
+---------+------------+
| user_id | product_id |
+---------+------------+
| 101     | 3          |
| 102     | 1          |
| 102     | 2          |
| 102     | 3          |
+---------+------------+ 
Explanation: 
User 101:
    - Spent 10 * 10 = 100 on product 1.
    - Spent 7 * 15 = 105 on product 3.
User 101 spent the most money on product 3.
User 102:
    - Spent (9 + 7) * 10 = 150 on product 1.
    - Spent 6 * 25 = 150 on product 2.
    - Spent 10 * 15 = 150 on product 3.
User 102 spent the most money on products 1, 2, and 3.

select *, sum(quantity*price) total_spend
from sales s join product p using(product_id)
group by user_id, product_id

| product_id | sale_id | user_id | quantity | price | total_spend |
| ---------- | ------- | ------- | -------- | ----- | ----------- |
| 1          | 1       | 101     | 10       | 10    | 100         |
| 3          | 2       | 101     | 7        | 15    | 105         |
| 1          | 3       | 102     | 9        | 10    | 150         |
| 2          | 4       | 102     | 6        | 25    | 150         |
| 3          | 5       | 102     | 10       | 15    | 150         |

# Write your MySQL query statement below
with cte as(
    select *, sum(quantity*price) total_spend
from sales s join product p using(product_id)
group by user_id, product_id
)
select user_id, product_id
from cte
where (user_id, product_id,total_spend) in (select user_id, product_id,max(total_spend) over (partition by user_id) from cte)
