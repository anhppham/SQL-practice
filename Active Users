
Input: 
Accounts table:
+----+----------+
| id | name     |
+----+----------+
| 1  | Winston  |
| 7  | Jonathan |
+----+----------+
Logins table:
+----+------------+
| id | login_date |
+----+------------+
| 7  | 2020-05-30 |
| 1  | 2020-05-30 |
| 7  | 2020-05-31 |
| 7  | 2020-06-01 |
| 7  | 2020-06-02 |
| 7  | 2020-06-02 |
| 7  | 2020-06-03 |
| 1  | 2020-06-07 |
| 7  | 2020-06-10 |
+----+------------+
Output: 
+----+----------+
| id | name     |
+----+----------+
| 7  | Jonathan |
+----+----------+


| id | login_date | ranking | prev_date  |
| -- | ---------- | ------- | ---------- |
| 1  | 2020-05-30 | 1       | 2020-05-29 |
| 1  | 2020-06-07 | 2       | 2020-06-05 |
| 7  | 2020-05-30 | 1       | 2020-05-29 |
| 7  | 2020-05-31 | 2       | 2020-05-29 |
| 7  | 2020-06-01 | 3       | 2020-05-29 |
| 7  | 2020-06-02 | 4       | 2020-05-29 |
| 7  | 2020-06-02 | 4       | 2020-05-29 |
| 7  | 2020-06-03 | 6       | 2020-05-28 |
| 7  | 2020-06-10 | 7       | 2020-06-03 |

with cte as(
    select *, date_add(login_date, interval -ranking day) prev_date
    from (select *, rank() over(partition by id
    order by login_date) ranking
    from logins)t
)
select id, name 
from cte join accounts using(id)
group by id, prev_date
having count(*) >=5
