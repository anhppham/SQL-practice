
Write an SQL query to report all the sessions that did not get shown any ads.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Playback table:
+------------+-------------+------------+----------+
| session_id | customer_id | start_time | end_time |
+------------+-------------+------------+----------+
| 1          | 1           | 1          | 5        |
| 2          | 1           | 15         | 23       |
| 3          | 2           | 10         | 12       |
| 4          | 2           | 17         | 28       |
| 5          | 2           | 2          | 8        |
+------------+-------------+------------+----------+
Ads table:
+-------+-------------+-----------+
| ad_id | customer_id | timestamp |
+-------+-------------+-----------+
| 1     | 1           | 5         |
| 2     | 2           | 17        |
| 3     | 2           | 20        |
+-------+-------------+-----------+
Output: 
+------------+
| session_id |
+------------+
| 2          |
| 3          |
| 5          |
+------------+
Explanation: 
The ad with ID 1 was shown to user 1 at time 5 while they were in session 1.
The ad with ID 2 was shown to user 2 at time 17 while they were in session 4.
The ad with ID 3 was shown to user 2 at time 20 while they were in session 4.
We can see that sessions 1 and 4 had at least one ad. Sessions 2, 3, and 5 did not have any ads, so we return them.

select *#session_id
from playback p left join ads a using(customer_id)

| customer_id | session_id | start_time | end_time | ad_id | timestamp |
| ----------- | ---------- | ---------- | -------- | ----- | --------- |
| 1           | 1          | 1          | 5        | 1     | 5         |
| 1           | 2          | 15         | 23       | 1     | 5         |
| 2           | 3          | 10         | 12       | 3     | 20        |
| 2           | 3          | 10         | 12       | 2     | 17        |
| 2           | 4          | 17         | 28       | 3     | 20        |
| 2           | 4          | 17         | 28       | 2     | 17        |
| 2           | 5          | 2          | 8        | 3     | 20        |
| 2           | 5          | 2          | 8        | 2     | 17        |

select distinct session_id
from playback
where session_id not in (select distinct session_id
from ads a left join playback p using(customer_id)
where timestamp between start_time and end_time)
