Example 1:


Input: 
Points table:
+----------+-------------+-------------+
| id       | x_value     | y_value     |
+----------+-------------+-------------+
| 1        | 2           | 7           |
| 2        | 4           | 8           |
| 3        | 2           | 10          |
+----------+-------------+-------------+
Output: 
+----------+-------------+-------------+
| p1       | p2          | area        |
+----------+-------------+-------------+
| 2        | 3           | 4           |
| 1        | 2           | 2           |
+----------+-------------+-------------+


| P1 | P2 | AREA | previous_result |
| -- | -- | ---- | --------------- |
| 2  | 1  | 2    |                 |
| 1  | 2  | 2    | 2               |
| 3  | 2  | 4    | 2               |
| 2  | 3  | 4    | 4               |


with cte as(
    select p1.id P1, p2.id P2, (abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value)) AREA
from points p1 cross join points p2 #on p1.id = p2.id
where (p1.id != p2.id) and ((abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value)) != 0)
order by area desc, p1 asc, p2 asc
), cte1 as(
    select distinct *,(lag(AREA,1) OVER (ORDER BY AREA ASC)) previous_result
    from cte
)
select distinct *
from cte1
#order by area desc, p1 asc, p2 asc


#final solution
with cte as(
    select p1.id P1, p2.id P2, (abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value)) AREA
from points p1 cross join points p2 #on p1.id = p2.id
where (p1.id != p2.id) and ((abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value)) != 0)
#order by area desc, p1 desc, p2 desc
), 
cte1 as(
    select least(P1,P2) P1, greatest(P1,P2) P2, area
    from cte
)
select distinct P1, P2, Area
from cte1
order by area desc, p1 asc, p2 asc
