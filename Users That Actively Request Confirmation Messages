
Write an SQL query to find the IDs of the users that requested a confirmation message twice within a 24-hour window. Two messages exactly 24 hours apart are considered to be within the window. The action does not affect the answer, only the request time.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Signups table:
+---------+---------------------+
| user_id | time_stamp          |
+---------+---------------------+
| 3       | 2020-03-21 10:16:13 |
| 7       | 2020-01-04 13:57:59 |
| 2       | 2020-07-29 23:09:44 |
| 6       | 2020-12-09 10:39:37 |
+---------+---------------------+
Confirmations table:
+---------+---------------------+-----------+
| user_id | time_stamp          | action    |
+---------+---------------------+-----------+
| 3       | 2021-01-06 03:30:46 | timeout   |
| 3       | 2021-01-06 03:37:45 | timeout   |
| 7       | 2021-06-12 11:57:29 | confirmed |
| 7       | 2021-06-13 11:57:30 | confirmed |
| 2       | 2021-01-22 00:00:00 | confirmed |
| 2       | 2021-01-23 00:00:00 | timeout   |
| 6       | 2021-10-23 14:14:14 | confirmed |
| 6       | 2021-10-24 14:14:13 | timeout   |
+---------+---------------------+-----------+
Output: 
+---------+
| user_id |
+---------+
| 2       |
| 3       |
| 6       |
+---------+
Explanation: 
User 2 requested two messages within exactly 24 hours of each other, so we include them.
User 3 requested two messages within 6 minutes and 59 seconds of each other, so we include them.
User 6 requested two messages within 23 hours, 59 minutes, and 59 seconds of each other, so we include them.
User 7 requested two messages within 24 hours and 1 second of each other, so we exclude them from the answer.

select *
from Confirmations c1, Confirmations c2
where c1.user_id = c2.user_id and c1.time_stamp != c2.time_stamp

| user_id | time_stamp          | action    | user_id | time_stamp          | action    |
| ------- | ------------------- | --------- | ------- | ------------------- | --------- |
| 3       | 2021-01-06 03:37:45 | timeout   | 3       | 2021-01-06 03:30:46 | timeout   |
| 3       | 2021-01-06 03:30:46 | timeout   | 3       | 2021-01-06 03:37:45 | timeout   |
| 7       | 2021-06-13 11:57:30 | confirmed | 7       | 2021-06-12 11:57:29 | confirmed |
| 7       | 2021-06-12 11:57:29 | confirmed | 7       | 2021-06-13 11:57:30 | confirmed |
| 2       | 2021-01-23 00:00:00 | timeout   | 2       | 2021-01-22 00:00:00 | confirmed |
| 2       | 2021-01-22 00:00:00 | confirmed | 2       | 2021-01-23 00:00:00 | timeout   |
| 6       | 2021-10-24 14:14:13 | timeout   | 6       | 2021-10-23 14:14:14 | confirmed |
| 6       | 2021-10-23 14:14:14 | confirmed | 6       | 2021-10-24 14:14:13 | timeout   |

| user_id | time_stamp          | time_stamp          |
| ------- | ------------------- | ------------------- |
| 3       | 2021-01-06 03:37:45 | 2021-01-06 03:30:46 |
| 3       | 2021-01-06 03:30:46 | 2021-01-06 03:37:45 |
| 7       | 2021-06-13 11:57:30 | 2021-06-12 11:57:29 |
| 7       | 2021-06-12 11:57:29 | 2021-06-13 11:57:30 |
| 2       | 2021-01-23 00:00:00 | 2021-01-22 00:00:00 |
| 2       | 2021-01-22 00:00:00 | 2021-01-23 00:00:00 |
| 6       | 2021-10-24 14:14:13 | 2021-10-23 14:14:14 |
| 6       | 2021-10-23 14:14:14 | 2021-10-24 14:14:13 |

select distinct user_id #user_id, datediff(time_stamp_1,time_stamp_2) diff
from (select c1.user_id,c1.time_stamp time_stamp_1, c2.time_stamp time_stamp_2
from Confirmations c1, Confirmations c2
where c1.user_id = c2.user_id and c1.time_stamp < c2.time_stamp)t
where timestampdiff(second,time_stamp_1,time_stamp_2) <= 86400

| user_id | time_stamp_1        | time_stamp_2        | diff  |
| ------- | ------------------- | ------------------- | ----- |
| 3       | 2021-01-06 03:30:46 | 2021-01-06 03:37:45 | 419   |
| 7       | 2021-06-12 11:57:29 | 2021-06-13 11:57:30 | 86401 |
| 2       | 2021-01-22 00:00:00 | 2021-01-23 00:00:00 | 86400 |
| 6       | 2021-10-23 14:14:14 | 2021-10-24 14:14:13 | 86399 |
