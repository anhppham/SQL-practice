The winning streak of a player is the number of consecutive wins uninterrupted by draws or losses.

Write an SQL query to count the longest winning streak for each player.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Matches table:
+-----------+------------+--------+
| player_id | match_day  | result |
+-----------+------------+--------+
| 1         | 2022-01-17 | Win    |
| 1         | 2022-01-18 | Win    |
| 1         | 2022-01-25 | Win    |
| 1         | 2022-01-31 | Draw   |
| 1         | 2022-02-08 | Win    |
| 2         | 2022-02-06 | Lose   |
| 2         | 2022-02-08 | Lose   |
| 3         | 2022-03-30 | Win    |
+-----------+------------+--------+
Output: 
+-----------+----------------+
| player_id | longest_streak |
+-----------+----------------+
| 1         | 3              |
| 2         | 0              |
| 3         | 1              |
+-----------+----------------+
Explanation: 
Player 1:
From 2022-01-17 to 2022-01-25, player 1 won 3 consecutive matches.
On 2022-01-31, player 1 had a draw.
On 2022-02-08, player 1 won a match.
The longest winning streak was 3 matches.

Player 2:
From 2022-02-06 to 2022-02-08, player 2 lost 2 consecutive matches.
The longest winning streak was 0 matches.

Player 3:
On 2022-03-30, player 3 won a match.
The longest winning streak was 1 match.

select *,sum(
case
when result = 'Win' then 1
else -1 end
) longest_streak
from Matches
group by player_id

| player_id | match_day  | result | longest_streak |
| --------- | ---------- | ------ | -------------- |
| 1         | 2022-01-17 | Win    | 3              |
| 2         | 2022-02-06 | Lose   | -2             |
| 3         | 2022-03-30 | Win    | 1              |


with cte as (
    select *,sum(
case
when result = 'Win' then 1
else -1 end
) longest_streak
from Matches
group by player_id
)
select player_id, (
    case
    when longest_streak >= 0 then longest_streak
    else 0 end
)longest_streak
from cte

| player_id | match_day  | result | ranking | player_id | match_day  | result | ranking_only_win |
| --------- | ---------- | ------ | ------- | --------- | ---------- | ------ | ---------------- |
| 1         | 2022-01-17 | Win    | 1       | 1         | 2022-01-17 | Win    | 1                |
| 1         | 2022-01-18 | Win    | 2       | 1         | 2022-01-18 | Win    | 2                |
| 1         | 2022-01-25 | Win    | 3       | 1         | 2022-01-25 | Win    | 3                |
| 1         | 2022-02-08 | Win    | 5       | 1         | 2022-02-08 | Win    | 4                |
| 3         | 2022-03-30 | Win    | 1       | 3         | 2022-03-30 | Win    | 1                |

| player_id | match_day  | result | ranking | player_id | match_day  | result | ranking_only_win | gap |
| --------- | ---------- | ------ | ------- | --------- | ---------- | ------ | ---------------- | --- |
| 1         | 2022-01-17 | Win    | 1       | 1         | 2022-01-17 | Win    | 1                | 0   |
| 1         | 2022-01-18 | Win    | 2       | 1         | 2022-01-18 | Win    | 2                | 0   |
| 1         | 2022-01-25 | Win    | 3       | 1         | 2022-01-25 | Win    | 3                | 0   |
| 1         | 2022-02-08 | Win    | 5       | 1         | 2022-02-08 | Win    | 4                | 1   |
| 3         | 2022-03-30 | Win    | 1       | 3         | 2022-03-30 | Win    | 1                | 0   |

| player_id | longest_streak |
| --------- | -------------- |
| 1         | 3              |
| 3         | 1              |


with cte as(
    select *, row_number() over (partition by player_id order by match_day) ranking
    from matches
), cte2 as(
    select *, row_number() over (partition by player_id order by match_day) ranking_only_win
    from matches 
    where result = 'Win'
), cte3 as(
    select c1.player_id, c1.match_day, (ranking-ranking_only_win) gap
from cte c1 join cte2 c2
where c1.player_id=c2.player_id and c1.match_day = c2.match_day 
), cte4 as(
    select G.player_id,
    COUNT(G.gap) AS consec_count,
    ROW_NUMBER() OVER(PARTITION BY G.player_id ORDER BY COUNT(G.gap) DESC) AS consec_rnk #consequence rank means for the highest number of count to be in the top 
    -> highest number of consecutive win
  FROM
    cte3 G
  GROUP BY
    G.player_id, G.gap
)
select t.player_id, ifnull(consec_count,0) longest_streak
from (select distinct player_id from matches)t left join (select * from cte4 where consec_rnk = 1) c1 on t.player_id=c1.player_id

